name: Automated Word Commit

on:
  schedule:
    - cron: "0 9 * * *"   # Runs every day at 09:00 UTC
  workflow_dispatch:
    inputs:
      word:
        description: "Word to draw in contributions"
        required: false
        default: "JESWIN"

permissions:
  contents: write

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Git identity
        run: |
          git config user.name "JB1071017"
          git config user.email "jeswin.b.maliyekkal@gmail.com"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Generate commit dates from word
        id: gen
        run: |
          WORD="${{ github.event.inputs.word || 'JESWIN' }}"
          echo "WORD=$WORD"

          python <<'PYCODE'
import datetime, os, sys

WORD = os.environ.get("WORD", "JESWIN")

FONT = {
    "A": ["01110","10001","10001","11111","10001","10001","10001"],
    "B": ["11110","10001","11110","10001","10001","10001","11110"],
    "C": ["01111","10000","10000","10000","10000","10000","01111"],
    "D": ["11110","10001","10001","10001","10001","10001","11110"],
    "E": ["11111","10000","11110","10000","10000","10000","11111"],
    "F": ["11111","10000","11110","10000","10000","10000","10000"],
    "G": ["01111","10000","10000","10111","10001","10001","01111"],
    "H": ["10001","10001","10001","11111","10001","10001","10001"],
    "I": ["11111","00100","00100","00100","00100","00100","11111"],
    "J": ["11111","00100","00100","00100","10100","10100","01100"],
    "K": ["10001","10010","10100","11000","10100","10010","10001"],
    "L": ["10000","10000","10000","10000","10000","10000","11111"],
    "M": ["10001","11011","10101","10101","10001","10001","10001"],
    "N": ["10001","11001","10101","10011","10001","10001","10001"],
    "O": ["01110","10001","10001","10001","10001","10001","01110"],
    "P": ["11110","10001","11110","10000","10000","10000","10000"],
    "Q": ["01110","10001","10001","10001","10101","10010","01101"],
    "R": ["11110","10001","11110","10100","10010","10001","10001"],
    "S": ["11111","10000","11111","00001","00001","10001","11111"],
    "T": ["11111","00100","00100","00100","00100","00100","00100"],
    "U": ["10001","10001","10001","10001","10001","10001","11111"],
    "V": ["10001","10001","10001","10001","10001","01010","00100"],
    "W": ["10001","10001","10101","10101","10101","10101","01010"],
    "X": ["10001","01010","00100","00100","00100","01010","10001"],
    "Y": ["10001","01010","00100","00100","00100","00100","00100"],
    "Z": ["11111","00001","00010","00100","01000","10000","11111"],
    "0": ["01110","10001","10011","10101","11001","10001","01110"],
    "1": ["00100","01100","00100","00100","00100","00100","01110"],
    "2": ["11111","00001","00001","11111","10000","10000","11111"],
    "3": ["11111","00001","00001","11111","00001","00001","11111"],
    "4": ["10001","10001","10001","11111","00001","00001","00001"],
    "5": ["11111","10000","10000","11111","00001","00001","11111"],
    "6": ["11111","10000","10000","11111","10001","10001","11111"],
    "7": ["11111","00001","00010","00100","01000","01000","01000"],
    "8": ["11111","10001","10001","11111","10001","10001","11111"],
    "9": ["11111","10001","10001","11111","00001","00001","11111"],
    " ": ["00000","00000","00000","00000","00000","00000","00000"]
}

def next_sunday(today=None):
    if today is None:
        today = datetime.date.today()
    days_ahead = (6 - today.weekday()) % 7
    return today + datetime.timedelta(days=days_ahead)

def get_dates(message):
    start_date = next_sunday()
    commit_dates = []
    col_offset = 0
    for ch in message.upper():
        if ch not in FONT:
            ch = " "
        matrix = FONT[ch]
        for col in range(6):
            if col < 5:
                for row in range(7):
                    if matrix[row][col] == "1":
                        commit_day = start_date + datetime.timedelta(weeks=col_offset + col, days=row)
                        commit_dates.append(commit_day)
        col_offset += 6
    return sorted(set(commit_dates))

dates = get_dates(WORD)
today = datetime.date.today()
if today in dates:
    print("DO_COMMIT=true")
else:
    print("DO_COMMIT=false")
PYCODE
        shell: bash

      - name: Create empty commit if today is in word pattern
        if: steps.gen.outputs.DO_COMMIT == 'true'
        run: |
          git commit --allow-empty -m "Word commit for $(date -u +'%Y-%m-%d')" || echo "No commit"
          git push
